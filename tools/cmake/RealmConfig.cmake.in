include("${CMAKE_CURRENT_LIST_DIR}/RealmTargets.cmake")

# Find dependencies
include(CMakeFindDependencyMacro)

set(REALM_NEEDS_OPENSSL OFF)
if(UNIX AND NOT APPLE)
    set(REALM_NEEDS_OPENSSL ON)
elseif(TARGET Realm::Sync AND CMAKE_SYSTEM_NAME MATCHES "^Windows")
    set(REALM_NEEDS_OPENSSL ON)
endif()

if(REALM_NEEDS_OPENSSL)
    if(NOT REALM_USE_SYSTEM_OPENSSL)
        if(NOT OPENSSL_ROOT_DIR)
            if(NOT OPENSSL_ROOT_DIR STREQUAL "${CMAKE_BINARY_DIR}/openssl")
                set(OPENSSL_URL "http://static.realm.io/downloads/openssl/@OPENSSL_VERSION@/Linux/x86_64/openssl.tgz")
                if(ANDROID)
                    set(OPENSSL_URL "http://static.realm.io/downloads/openssl/@OPENSSL_VERSION@/Android/${CMAKE_ANDROID_ARCH_ABI}/openssl.tgz")
                endif()
                message(STATUS "Getting ${OPENSSL_URL}...")
                file(DOWNLOAD "${OPENSSL_URL}" "${CMAKE_BINARY_DIR}/openssl/openssl.tgz" STATUS download_status)
                list(GET download_status 0 status_code)
                if (NOT "${status_code}" STREQUAL "0")
                    message(FATAL_ERROR "Downloading ${OPENSSL_URL}... Failed. Status: ${download_status}")
                endif()
                message(STATUS "Uncompressing OpenSSL...")
                execute_process(
                    COMMAND ${CMAKE_COMMAND} -E tar xfz "openssl.tgz"
                    WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/openssl"
                )
            endif()
            set(OPENSSL_ROOT_DIR "${CMAKE_BINARY_DIR}/openssl")
        endif()
    endif()

    find_dependency(OpenSSL VERSION @OPENSSL_VERSION_MAJOR_MINOR@)
endif()

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_dependency(Threads)

if(TARGET Realm::Sync)
    find_dependency(ZLIB)
endif()