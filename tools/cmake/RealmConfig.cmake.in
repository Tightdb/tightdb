include(CMakeFindDependencyMacro)

if(UNIX AND NOT APPLE)
    if(REALM_USE_SYSTEM_OPENSSL)
        # Use system OpenSSL
        find_package(OpenSSL REQUIRED)
    else()
        if(NOT OpenSSL_DIR)
            if(NOT EXISTS ${CMAKE_BINARY_DIR}/openssl/lib/cmake/OpenSSL/OpenSSLConfig.cmake)
                set(OPENSSL_URL "http://static.realm.io/downloads/openssl/@OPENSSL_VERSION@/Linux/x86_64/openssl.tgz")
                if(ANDROID)
                    set(OPENSSL_URL "http://static.realm.io/downloads/openssl/@OPENSSL_VERSION@/Android/${CMAKE_ANDROID_ARCH_ABI}/openssl.tgz")
                endif()
                message(STATUS "Getting ${OPENSSL_URL}...")
                file(DOWNLOAD "${OPENSSL_URL}" "${CMAKE_BINARY_DIR}/openssl/openssl.tgz" STATUS download_status)
                list(GET download_status 0 status_code)
                if (NOT "${status_code}" STREQUAL "0")
                    message(FATAL_ERROR "Downloading ${OPENSSL_URL}... Failed. Status: ${download_status}")
                endif()
                message(STATUS "Uncompressing OpenSSL...")
                execute_process(
                    COMMAND ${CMAKE_COMMAND} -E tar xfz "openssl.tgz"
                    WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/openssl"
                )
            endif()
            message(STATUS "Importing OpenSSL...")
            set(OpenSSL_DIR "${CMAKE_BINARY_DIR}/openssl/lib/cmake/OpenSSL")
        endif()
        find_dependency(OpenSSL REQUIRED CONFIG)
    endif()
endif()

# Find dependencies
set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)

include("${CMAKE_CURRENT_LIST_DIR}/RealmTargets.cmake")

if(TARGET Realm::Sync)
    find_package(ZLIB REQUIRED)
endif()