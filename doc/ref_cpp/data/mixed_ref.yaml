#
# C++ reference documentation for Mixed class
#

ID         : class_mixed
TITLE      : Mixed
SUMMARY    : &g_mixed_summary
             Flexible data type.
DESCR      : &g_mixed_descr
             The Mixed class is a light-weight implementation of a flexible type system. Once
             a variable is given a value via a constructor, it is not possible to modify the
             value. Any supported type of TightDB can be used with the Mixed class. The current
             supported types are boolean, integer, timestamps, strings, binary data and
             {@link class_dyn_table}.

             Using the Mixed class resembles using a dynamic typed language. The flexibility
             of mixing types has a cost as compacting data is harder and queries will generally
             be slower.
SEE        :
EXAMPLES:
- DESCR    :
  CODE     : ex_cpp_group_intro
IGNORE     : []                   # List of method-ids to ignore
CATEGORIES:
- Constructors:
  METHODS:
  - g_mixed_constructor_bool:
      NAME     : Mixed
  - g_mixed_constructor_int:
      NAME     : Mixed
  - g_mixed_constructor_float:
      NAME     : Mixed
  - g_mixed_constructor_double:
      NAME     : Mixed
  - g_mixed_constructor_date:
      NAME     : Mixed
  - g_mixed_constructor_string:
      NAME     : Mixed
  - g_mixed_constructor_binary:
      NAME     : Mixed
  - g_mixed_constructor_binary_2:
      NAME     : Mixed
  - g_mixed_constructor_table:
      NAME     : Mixed
      TITLE    : Mixed
      SUMMARY  : &g_mixed_constructor_summary
                 Create a Mixed variable.
      DESCR    : &g_mixed_constructor_descr
                 >
                 Mixed typed variables are instances of the Mixed class. Mixed typed values add a high
                 degree of flexibility to schemas.
      SIGNATURE: |
                 Mixed(bool v)
                 Mixed(int64_t v)
                 Mixed(float v)
                 Mixed(double v)
                 Mixed(Date v)
                 Mixed(StringData v)
                 Mixed(BinaryData v)
                 Mixed(subtable_tag)
      PARAMS:
      - NAME   : v
        TYPES  : [bool, int64_t, float, double, Date, StringData, BinaryData]
        DESCR  : &g_mixed_constructor_parm1_descr
                 The value.
      EXAMPLES:
      - CODE   : ex_cpp_mixed_constructor
        DESCR  :
        
- Getters:
  METHODS:
  - g_mixed_get_type:
      NAME     : get_type
      SUMMARY  : &g_mixed_get_type_summary
                 Get the type.
      DESCR    : &g_mixed_get_type_descr
                 This method retrieves the real type of a Mixed variable.
      CONST    : True
      RETURN:
        TYPES  : DataType
        DESCR  : &g_mixed_get_type_return1_descr
                 The type.
      EXAMPLES:
      - CODE   : ex_cpp_mixed_get_type
        DESCR  :
        
  - g_mixed_get_bool:
      NAME     : get_bool
  - g_mixed_get_int:
      NAME     : get_int
  - g_mixed_get_float:
      NAME     : get_float
  - g_mixed_get_double:
      NAME     : get_double      
  - g_mixed_get_date:
      NAME     : get_date
  - g_mixed_get_string:
      NAME     : get_string
  - g_mixed_get_binary:
      NAME     : get_binary
      TITLE    : get_*
      SUMMARY  : &g_mixed_get_value_summary
                 Get value of Mixed variable.
      DESCR    : &g_mixed_get_value_descr
                 The value of a Mixed typed variable is retrieved by this method.
      SIGNATURE: |
                 bool        get_bool()   const;
                 int64_t     get_int()    const;
                 float       get_float()  const;
                 double      get_double() const;                 
                 Date        get_date()   const;
                 StringData  get_string() const;
                 BinaryData  get_binary() const;
      CONST    : True
      RETURN:
        TYPES  : [bool, int64_t, float, double, Date, StringData, BinaryData]
        DESCR  : &g_mixed_get_return1_descr
                 The value.
      EXAMPLES:
      - CODE   : ex_cpp_mixed_get_value
        DESCR  :
