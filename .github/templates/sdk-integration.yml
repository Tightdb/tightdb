#@ load("@ytt:template", "template")
#@ load("@ytt:overlay", "overlay")
#@ realmciToken = "${{ secrets.REALM_CI_PAT }}"
#@ defaultCommitMessage = "Update Core to ${{ steps.update-core.outputs.core-sha }}"

#@ def checkoutSDK(repo):
name: #@ "Checkout " + repo
uses: actions/checkout@v2
with:
  repository: #@ "realm/" + repo
  path: #@ "integration/" + repo
  submodules: recursive
  token: #@ realmciToken
#@ end

#@ def checkoutExistingBranch(repo):
name: Checkout existing branch
id: checkout-existing
#@yaml/text-templated-strings
run: |
  cd integration/(@= repo @)
  branch_exists=$(git ls-remote --heads https://github.com/realm/(@= repo @).git ${{ github.event.pull_request.head.ref }} | wc -l)
  if [ $branch_exists -eq 1 ];then
    git remote set-branches --add 'origin' ${{ github.event.pull_request.head.ref }}
    git fetch origin ${{ github.event.pull_request.head.ref }}
    git checkout -t origin/${{ github.event.pull_request.head.ref }}
    echo "::set-output name=pr-exists::true"
  fi
#@ end

#@ def updateSubmodule(repo):
name: Update submodule
id: update-core
#@yaml/text-templated-strings
run: |
  cd integration/(@= repo @)/wrappers/realm-core
  git remote set-branches --add 'origin' ${{ github.event.pull_request.head.ref }}
  git fetch origin ${{ github.event.pull_request.head.ref }}
  git checkout -t origin/${{ github.event.pull_request.head.ref }}
  core_sha=$(git rev-parse HEAD)
  echo "::set-output name=core-sha::$core_sha"
#@ end

#@ def pushToExistingBranch(repo):
name: Push to existing branch
if: ${{ steps.checkout-existing.outputs.pr-exists == 'true' }}
#@yaml/text-templated-strings
run: |
  cd integration/(@= repo @)
  if [ -n "$(git status --porcelain)" ]; then
    git config --global user.name 'Realm CI bot'
    git config --global user.email 'realm-ci@users.noreply.github.com'
    git commit -am "(@= defaultCommitMessage @)"
    git push https://realm-ci:(@= realmciToken @)@github.com/realm/(@= repo @).git
  else
    echo "SDK repo is already up to date with these changes. Nothing to commit/push."
  fi
#@ end

#@ def preparePR(repo):
name: Create PR
uses: peter-evans/create-pull-request@7380612b49221684fefa025244f2ef4008ae50ad
if: ${{ steps.checkout-existing.outputs.pr-exists != 'true' }}
with:
  token: #@ realmciToken
  branch: ${{ github.event.pull_request.head.ref }}
  title: ${{ github.event.pull_request.title }}
  body: Pick up https://github.com/realm/realm-core/pull/${{ github.event.pull_request.number }}
  delete-branch: true
  path: #@ "integration/" + repo
  base: master
  labels: public-api
  commit-message: #@ defaultCommitMessage
  draft: true
#@ end

#@ def sdkIntegrationTest(repo):
#@yaml/text-templated-strings
"update-(@= repo @)":
  runs-on: ubuntu-latest
  name: #@ "Update " + repo
  if: ${{ contains(github.event.pull_request.labels.*.name, 'public-api') }}
  steps:
    - uses: actions/checkout@v2
    - #@ checkoutSDK(repo)
    - #@ checkoutExistingBranch(repo)
    - #@ updateSubmodule(repo)
    - #@ pushToExistingBranch(repo)
    - #@ preparePR(repo)
#@ end

---
name: Test SDKs
"on":
  pull_request:
    types: [ opened, labeled, synchronize ]
jobs:
  _: #@ template.replace(sdkIntegrationTest("realm-dotnet"))