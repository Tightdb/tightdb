PASSIVE_SUBDIRS = test-tightdb test-sqlite3 test-stl performance experiments

TEST_PROGRAMS = tightdb-tests

tightdb_tests_SOURCES = $(wildcard *.c *.cpp large_tests/*.cpp)
tightdb_tests_LIBS = ../src/tightdb/libtightdb.a

EXTRA_CLEAN_DIRS = large_tests

ifeq ($(shell pkg-config unittest++ --exists 2>/dev/null && echo yes),yes)
tightdb_tests_CFLAGS  = -Wno-sign-compare $(shell pkg-config unittest++ --cflags)
tightdb_tests_LDFLAGS = $(shell pkg-config unittest++ --libs)
else
PASSIVE_SUBDIRS      += UnitTest++
test_tightdb_DEPS     = UnitTest++
test_sqlite3_DEPS     = UnitTest++
test_stl_DEPS         = UnitTest++
experiments_DEPS      = UnitTest++
tightdb_tests_CFLAGS  = -IUnitTest++/src
tightdb_tests_LDFLAGS = -LUnitTest++ -lUnitTest++
tightdb_tests_DEPS    = UnitTest++
endif

include ../generic.mk

.PHONY: benchmark
benchmark: subdir/test-tightdb/default subdir/test-sqlite3/default subdir/test-stl/default
	@echo ""
	@echo ".:: TightDB ::."
	test-tightdb/test-tightdb
	@echo ""
	@echo ".:: SQLite 3 ::."
	test-sqlite3/test-sqlite3
	@echo ""
	@echo ".:: STL Vector ::."
	test-stl/test-stl

.PHONY: UnitTest++
UnitTest++:
	$(MAKE) -C UnitTest++ CXXFLAGS="-g -Wall -W -ansi" LDFLAGS= >/dev/null

# Build and run whatever is in experiements/testcase.cpp
.PHONY: testcase testcase-debug
testcase:
	@$(MAKE) -C experiments test
testcase-debug:
	@$(MAKE) -C experiments test-debug
